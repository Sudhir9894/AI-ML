 import numpy as np
import pandas as pd
from pgmpy.models import BayesianNetwork
from pgmpy.estimators import MaximumLikelihoodEstimator
from pgmpy.inference import VariableElimination

# Load Cleveland Heart Disease data
heart_disease = pd.read_csv("heart.csv")

# Replace '?' with NaN for handling missing values
heart_disease.replace('?', np.nan, inplace=True)

# Display the first few rows of the dataset
print("Few examples from the dataset are given below:")
print(heart_disease.head())

# Define the Bayesian Network Structure
model = BayesianNetwork([
    ('age', 'trestbps'),
    ('age', 'fbs'),
    ('sex', 'trestbps'),
    ('exang', 'trestbps'),
    ('trestbps', 'heartdisease'),
    ('fbs', 'heartdisease'),
    ('heartdisease', 'restecg'),
    ('heartdisease', 'thalach'),
    ('heartdisease', 'chol')
])

# Learning CPDs using Maximum Likelihood Estimators
print("\nLearning CPDs using Maximum Likelihood Estimators")
model.fit(heart_disease, estimator=MaximumLikelihoodEstimator)

# Performing Inference with the Bayesian Network
print("\nInferencing with Bayesian Network:")
heart_disease_infer = VariableElimination(model)

# Computing the Probability of Heart Disease given Age=28
print("\n1. Probability of Heart Disease given Age=28")
q1 = heart_disease_infer.query(variables=['heartdisease'], evidence={'age': 28})
print(q1)

# Computing the Probability of Heart Disease given Cholesterol=100
print("\n2. Probability of Heart Disease given Cholesterol=100")
q2 = heart_disease_infer.query(variables=['heartdisease'], evidence={'chol': 100})
print(q2)

